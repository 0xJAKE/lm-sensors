Many, many things. Most notably:

KERNEL MODULES
==============

* maxilife.c: Introduce new insmod variables
* maxilife.c: Round REG_TO_VID correctly
* icspll.c: Rewrite. The current implementation simply can't work at all.
  It needs i2c-level access (too bad for SMBus-only adapters).
* w83781d: Some features are still unsupported for the W8378[23]. For
  example, the new fan_divs (register 0x5d) and the extended beeps
  (bank 4 register 0x53). Also, alarms seem to give strange results
  sometimes, and there are some other minor problems, as indicated by
  Jonathan Bradshaw <jonathan@NrgUp.Com>
* Create wait-queues for bus locking instead of pure semaphores in the i2c
  base modules, to make it more interactive (right now one process can 
  monopolize the entire adapter)
* Find some soulation for block reads in smbus-on-i2c emulation code
  We need a hack in the i2c level code for this :-(
* At least the bit-lp and bit-velle modules do no detection on loading;
  ask Simon whether this is possible to add.
* Support 10-bit addresses. At this moment, they are supported nowhere, except
  in Simon Vogl's i2c modules.
* Change the i2c modules to keep the namespace clean (EXPORT_SYMBOL does not
  work for us; many static declarations need to be added; better ask Simon
  Vogl first)
* Make it SMP-safe: there are no spinlocks yet. They are needed at many
  places, probably (everywhere where global vars are accessed). This must be
  done for the i2c modules, too.
* Better general locking, or at least a once-over to check no race-conditions
  remain. This is part of the SMP-safeness, and can better be done at once.
* Register which i2c addresses are used (a la ISA) for each adapter.
* Test SIS5595(/91/98) sensor support. Write generic i2c support. 
  Thomas Dickel <Thomas.Dickel@mni.fh-giessen.de> owns one SIS5595.
* Make GL518SM rev 00 voltage iteration run as a kernel thread.
  Add libsensors support for the new readable registers.
* adm9240: check whether the current voltage computations are correct.
  Probably not, as they are different from the datasheet specifications.
  Also check for the supported dallas chip.
* lm80: Check how OS alarms work. At page 17 of the sheet, it tells
  something completely different from the description at page 25.
* gl518sm: Update binary search to 'trinary' search: because we have
  both upper and lower limits, you can see the difference between three
  pieces of the current range.
  Also, you can assume that new values are close to old values, so start
  with trying to use a small range near the old values (already partially
  done?)

LIBRARY
=======

* reload does not work (Bison/Flex problem?).
* Some library routines are pretty inefficient right now.
* Library should be split in more separate files, for better linking
  behaviour.

PROGRAMS
========

* Sensors program needs to print a + before lm75 temperatures
* Sensors program needs to be extended for many new chips
